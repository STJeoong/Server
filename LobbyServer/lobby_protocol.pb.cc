// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lobby_protocol.proto

#include "lobby_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protocol {
namespace lobby {
PROTOBUF_CONSTEXPR Login_Req::Login_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.passwd_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Login_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Login_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Login_ReqDefaultTypeInternal() {}
  union {
    Login_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Login_ReqDefaultTypeInternal _Login_Req_default_instance_;
PROTOBUF_CONSTEXPR Login_Resp::Login_Resp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Login_RespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Login_RespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Login_RespDefaultTypeInternal() {}
  union {
    Login_Resp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Login_RespDefaultTypeInternal _Login_Resp_default_instance_;
PROTOBUF_CONSTEXPR ChatLobby_Req::ChatLobby_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChatLobby_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatLobby_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatLobby_ReqDefaultTypeInternal() {}
  union {
    ChatLobby_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatLobby_ReqDefaultTypeInternal _ChatLobby_Req_default_instance_;
PROTOBUF_CONSTEXPR ChatLobby_Notify::ChatLobby_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChatLobby_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatLobby_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatLobby_NotifyDefaultTypeInternal() {}
  union {
    ChatLobby_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatLobby_NotifyDefaultTypeInternal _ChatLobby_Notify_default_instance_;
}  // namespace lobby
}  // namespace protocol
static ::_pb::Metadata file_level_metadata_lobby_5fprotocol_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_lobby_5fprotocol_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_lobby_5fprotocol_2eproto = nullptr;

const uint32_t TableStruct_lobby_5fprotocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::Login_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::Login_Req, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::Login_Req, _impl_.passwd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::Login_Resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::Login_Resp, _impl_.resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::ChatLobby_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::ChatLobby_Req, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::ChatLobby_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::ChatLobby_Notify, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::protocol::lobby::ChatLobby_Notify, _impl_.content_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protocol::lobby::Login_Req)},
  { 8, -1, -1, sizeof(::protocol::lobby::Login_Resp)},
  { 15, -1, -1, sizeof(::protocol::lobby::ChatLobby_Req)},
  { 22, -1, -1, sizeof(::protocol::lobby::ChatLobby_Notify)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protocol::lobby::_Login_Req_default_instance_._instance,
  &::protocol::lobby::_Login_Resp_default_instance_._instance,
  &::protocol::lobby::_ChatLobby_Req_default_instance_._instance,
  &::protocol::lobby::_ChatLobby_Notify_default_instance_._instance,
};

const char descriptor_table_protodef_lobby_5fprotocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024lobby_protocol.proto\022\016protocol.lobby\"\'"
  "\n\tLogin_Req\022\n\n\002id\030\001 \001(\t\022\016\n\006passwd\030\002 \001(\t\""
  "6\n\nLogin_Resp\022(\n\004resp\030\001 \001(\0162\032.protocol.l"
  "obby.E_RespCode\" \n\rChatLobby_Req\022\017\n\007cont"
  "ent\030\001 \001(\t\"1\n\020ChatLobby_Notify\022\014\n\004name\030\001 "
  "\001(\t\022\017\n\007content\030\002 \001(\t*b\n\nE_PacketID\022\021\n\rLO"
  "GIN_REQUEST\020\000\022\022\n\016LOGIN_RESPONSE\020\001\022\026\n\022CHA"
  "T_LOBBY_REQUEST\020d\022\025\n\021CHAT_LOBBY_NOTIFY\020n"
  "*D\n\nE_RespCode\022\006\n\002OK\020\000\022\024\n\020LOGIN_INVALID_"
  "PW\020\n\022\030\n\024LOGIN_INVALID_ACCESS\020\013b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_lobby_5fprotocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_lobby_5fprotocol_2eproto = {
    false, false, 398, descriptor_table_protodef_lobby_5fprotocol_2eproto,
    "lobby_protocol.proto",
    &descriptor_table_lobby_5fprotocol_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_lobby_5fprotocol_2eproto::offsets,
    file_level_metadata_lobby_5fprotocol_2eproto, file_level_enum_descriptors_lobby_5fprotocol_2eproto,
    file_level_service_descriptors_lobby_5fprotocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_lobby_5fprotocol_2eproto_getter() {
  return &descriptor_table_lobby_5fprotocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_lobby_5fprotocol_2eproto(&descriptor_table_lobby_5fprotocol_2eproto);
namespace protocol {
namespace lobby {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* E_PacketID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_lobby_5fprotocol_2eproto);
  return file_level_enum_descriptors_lobby_5fprotocol_2eproto[0];
}
bool E_PacketID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 100:
    case 110:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* E_RespCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_lobby_5fprotocol_2eproto);
  return file_level_enum_descriptors_lobby_5fprotocol_2eproto[1];
}
bool E_RespCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Login_Req::_Internal {
 public:
};

Login_Req::Login_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.lobby.Login_Req)
}
Login_Req::Login_Req(const Login_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Login_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.passwd_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.passwd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.passwd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_passwd().empty()) {
    _this->_impl_.passwd_.Set(from._internal_passwd(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.lobby.Login_Req)
}

inline void Login_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.passwd_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.passwd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.passwd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Login_Req::~Login_Req() {
  // @@protoc_insertion_point(destructor:protocol.lobby.Login_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Login_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.passwd_.Destroy();
}

void Login_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Login_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.lobby.Login_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.passwd_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Login_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.lobby.Login_Req.id"));
        } else
          goto handle_unusual;
        continue;
      // string passwd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_passwd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.lobby.Login_Req.passwd"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Login_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.lobby.Login_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.lobby.Login_Req.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string passwd = 2;
  if (!this->_internal_passwd().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_passwd().data(), static_cast<int>(this->_internal_passwd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.lobby.Login_Req.passwd");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_passwd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.lobby.Login_Req)
  return target;
}

size_t Login_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.lobby.Login_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string passwd = 2;
  if (!this->_internal_passwd().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_passwd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Login_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Login_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Login_Req::GetClassData() const { return &_class_data_; }


void Login_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Login_Req*>(&to_msg);
  auto& from = static_cast<const Login_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.lobby.Login_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_passwd().empty()) {
    _this->_internal_set_passwd(from._internal_passwd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Login_Req::CopyFrom(const Login_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.lobby.Login_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_Req::IsInitialized() const {
  return true;
}

void Login_Req::InternalSwap(Login_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.passwd_, lhs_arena,
      &other->_impl_.passwd_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Login_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lobby_5fprotocol_2eproto_getter, &descriptor_table_lobby_5fprotocol_2eproto_once,
      file_level_metadata_lobby_5fprotocol_2eproto[0]);
}

// ===================================================================

class Login_Resp::_Internal {
 public:
};

Login_Resp::Login_Resp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.lobby.Login_Resp)
}
Login_Resp::Login_Resp(const Login_Resp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Login_Resp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.resp_ = from._impl_.resp_;
  // @@protoc_insertion_point(copy_constructor:protocol.lobby.Login_Resp)
}

inline void Login_Resp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Login_Resp::~Login_Resp() {
  // @@protoc_insertion_point(destructor:protocol.lobby.Login_Resp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Login_Resp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Login_Resp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Login_Resp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.lobby.Login_Resp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Login_Resp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.lobby.E_RespCode resp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resp(static_cast<::protocol::lobby::E_RespCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Login_Resp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.lobby.Login_Resp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.lobby.E_RespCode resp = 1;
  if (this->_internal_resp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_resp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.lobby.Login_Resp)
  return target;
}

size_t Login_Resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.lobby.Login_Resp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.lobby.E_RespCode resp = 1;
  if (this->_internal_resp() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_resp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Login_Resp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Login_Resp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Login_Resp::GetClassData() const { return &_class_data_; }


void Login_Resp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Login_Resp*>(&to_msg);
  auto& from = static_cast<const Login_Resp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.lobby.Login_Resp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_resp() != 0) {
    _this->_internal_set_resp(from._internal_resp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Login_Resp::CopyFrom(const Login_Resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.lobby.Login_Resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_Resp::IsInitialized() const {
  return true;
}

void Login_Resp::InternalSwap(Login_Resp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.resp_, other->_impl_.resp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Login_Resp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lobby_5fprotocol_2eproto_getter, &descriptor_table_lobby_5fprotocol_2eproto_once,
      file_level_metadata_lobby_5fprotocol_2eproto[1]);
}

// ===================================================================

class ChatLobby_Req::_Internal {
 public:
};

ChatLobby_Req::ChatLobby_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.lobby.ChatLobby_Req)
}
ChatLobby_Req::ChatLobby_Req(const ChatLobby_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChatLobby_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.lobby.ChatLobby_Req)
}

inline void ChatLobby_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChatLobby_Req::~ChatLobby_Req() {
  // @@protoc_insertion_point(destructor:protocol.lobby.ChatLobby_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChatLobby_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.content_.Destroy();
}

void ChatLobby_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChatLobby_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.lobby.ChatLobby_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChatLobby_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string content = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.lobby.ChatLobby_Req.content"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChatLobby_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.lobby.ChatLobby_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.lobby.ChatLobby_Req.content");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.lobby.ChatLobby_Req)
  return target;
}

size_t ChatLobby_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.lobby.ChatLobby_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChatLobby_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChatLobby_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChatLobby_Req::GetClassData() const { return &_class_data_; }


void ChatLobby_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChatLobby_Req*>(&to_msg);
  auto& from = static_cast<const ChatLobby_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.lobby.ChatLobby_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChatLobby_Req::CopyFrom(const ChatLobby_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.lobby.ChatLobby_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatLobby_Req::IsInitialized() const {
  return true;
}

void ChatLobby_Req::InternalSwap(ChatLobby_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ChatLobby_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lobby_5fprotocol_2eproto_getter, &descriptor_table_lobby_5fprotocol_2eproto_once,
      file_level_metadata_lobby_5fprotocol_2eproto[2]);
}

// ===================================================================

class ChatLobby_Notify::_Internal {
 public:
};

ChatLobby_Notify::ChatLobby_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.lobby.ChatLobby_Notify)
}
ChatLobby_Notify::ChatLobby_Notify(const ChatLobby_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChatLobby_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protocol.lobby.ChatLobby_Notify)
}

inline void ChatLobby_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChatLobby_Notify::~ChatLobby_Notify() {
  // @@protoc_insertion_point(destructor:protocol.lobby.ChatLobby_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChatLobby_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
}

void ChatLobby_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChatLobby_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.lobby.ChatLobby_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChatLobby_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.lobby.ChatLobby_Notify.name"));
        } else
          goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.lobby.ChatLobby_Notify.content"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChatLobby_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.lobby.ChatLobby_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.lobby.ChatLobby_Notify.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.lobby.ChatLobby_Notify.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.lobby.ChatLobby_Notify)
  return target;
}

size_t ChatLobby_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.lobby.ChatLobby_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChatLobby_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChatLobby_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChatLobby_Notify::GetClassData() const { return &_class_data_; }


void ChatLobby_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChatLobby_Notify*>(&to_msg);
  auto& from = static_cast<const ChatLobby_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.lobby.ChatLobby_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChatLobby_Notify::CopyFrom(const ChatLobby_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.lobby.ChatLobby_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatLobby_Notify::IsInitialized() const {
  return true;
}

void ChatLobby_Notify::InternalSwap(ChatLobby_Notify* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ChatLobby_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lobby_5fprotocol_2eproto_getter, &descriptor_table_lobby_5fprotocol_2eproto_once,
      file_level_metadata_lobby_5fprotocol_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace lobby
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::lobby::Login_Req*
Arena::CreateMaybeMessage< ::protocol::lobby::Login_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::lobby::Login_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::lobby::Login_Resp*
Arena::CreateMaybeMessage< ::protocol::lobby::Login_Resp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::lobby::Login_Resp >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::lobby::ChatLobby_Req*
Arena::CreateMaybeMessage< ::protocol::lobby::ChatLobby_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::lobby::ChatLobby_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::lobby::ChatLobby_Notify*
Arena::CreateMaybeMessage< ::protocol::lobby::ChatLobby_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::lobby::ChatLobby_Notify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
