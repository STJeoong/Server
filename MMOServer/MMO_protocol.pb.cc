// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MMO_protocol.proto

#include "MMO_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protocol {
namespace mmo {
PROTOBUF_CONSTEXPR EnterGame_Resp::EnterGame_Resp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.myinfo_)*/nullptr
  , /*decltype(_impl_.resp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnterGame_RespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterGame_RespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterGame_RespDefaultTypeInternal() {}
  union {
    EnterGame_Resp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterGame_RespDefaultTypeInternal _EnterGame_Resp_default_instance_;
PROTOBUF_CONSTEXPR ObjectEnter_Notify::ObjectEnter_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.otherinfo_)*/nullptr
  , /*decltype(_impl_.speed_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectEnter_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectEnter_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectEnter_NotifyDefaultTypeInternal() {}
  union {
    ObjectEnter_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectEnter_NotifyDefaultTypeInternal _ObjectEnter_Notify_default_instance_;
PROTOBUF_CONSTEXPR ObjectExit_Notify::ObjectExit_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.otherid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObjectExit_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectExit_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectExit_NotifyDefaultTypeInternal() {}
  union {
    ObjectExit_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectExit_NotifyDefaultTypeInternal _ObjectExit_Notify_default_instance_;
PROTOBUF_CONSTEXPR Move_Req::Move_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Move_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Move_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Move_ReqDefaultTypeInternal() {}
  union {
    Move_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Move_ReqDefaultTypeInternal _Move_Req_default_instance_;
PROTOBUF_CONSTEXPR Move_Notify::Move_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Move_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Move_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Move_NotifyDefaultTypeInternal() {}
  union {
    Move_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Move_NotifyDefaultTypeInternal _Move_Notify_default_instance_;
PROTOBUF_CONSTEXPR Idle_Notify::Idle_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Idle_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Idle_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Idle_NotifyDefaultTypeInternal() {}
  union {
    Idle_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Idle_NotifyDefaultTypeInternal _Idle_Notify_default_instance_;
PROTOBUF_CONSTEXPR ChangeQuickSlot_Req::ChangeQuickSlot_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.skillname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.keycode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChangeQuickSlot_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeQuickSlot_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeQuickSlot_ReqDefaultTypeInternal() {}
  union {
    ChangeQuickSlot_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeQuickSlot_ReqDefaultTypeInternal _ChangeQuickSlot_Req_default_instance_;
PROTOBUF_CONSTEXPR UseSkill_Req::UseSkill_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.keycode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseSkill_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseSkill_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseSkill_ReqDefaultTypeInternal() {}
  union {
    UseSkill_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseSkill_ReqDefaultTypeInternal _UseSkill_Req_default_instance_;
PROTOBUF_CONSTEXPR UseSkill_Resp::UseSkill_Resp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.skillname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.who_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseSkill_RespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseSkill_RespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseSkill_RespDefaultTypeInternal() {}
  union {
    UseSkill_Resp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseSkill_RespDefaultTypeInternal _UseSkill_Resp_default_instance_;
PROTOBUF_CONSTEXPR NormalAttack_Notify::NormalAttack_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NormalAttack_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NormalAttack_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NormalAttack_NotifyDefaultTypeInternal() {}
  union {
    NormalAttack_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NormalAttack_NotifyDefaultTypeInternal _NormalAttack_Notify_default_instance_;
PROTOBUF_CONSTEXPR ChangeStats_Notify::ChangeStats_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.maxhp_)*/0
  , /*decltype(_impl_.maxmp_)*/0
  , /*decltype(_impl_.atk_)*/0
  , /*decltype(_impl_.def_)*/0
  , /*decltype(_impl_.speed_)*/0
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_.mp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChangeStats_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeStats_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeStats_NotifyDefaultTypeInternal() {}
  union {
    ChangeStats_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeStats_NotifyDefaultTypeInternal _ChangeStats_Notify_default_instance_;
PROTOBUF_CONSTEXPR GetEquipment_Notify::GetEquipment_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.slotidx_)*/0
  , /*decltype(_impl_.maxhp_)*/0
  , /*decltype(_impl_.maxmp_)*/0
  , /*decltype(_impl_.atk_)*/0
  , /*decltype(_impl_.def_)*/0
  , /*decltype(_impl_.speed_)*/0
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_.mp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEquipment_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEquipment_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEquipment_NotifyDefaultTypeInternal() {}
  union {
    GetEquipment_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEquipment_NotifyDefaultTypeInternal _GetEquipment_Notify_default_instance_;
PROTOBUF_CONSTEXPR GetConsume_Notify::GetConsume_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.slotidx_)*/0
  , /*decltype(_impl_.cnt_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetConsume_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConsume_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConsume_NotifyDefaultTypeInternal() {}
  union {
    GetConsume_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConsume_NotifyDefaultTypeInternal _GetConsume_Notify_default_instance_;
PROTOBUF_CONSTEXPR UseItem_Req::UseItem_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.itemtype_)*/0
  , /*decltype(_impl_.slotidx_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseItem_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseItem_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseItem_ReqDefaultTypeInternal() {}
  union {
    UseItem_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseItem_ReqDefaultTypeInternal _UseItem_Req_default_instance_;
}  // namespace mmo
}  // namespace protocol
static ::_pb::Metadata file_level_metadata_MMO_5fprotocol_2eproto[14];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_MMO_5fprotocol_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_MMO_5fprotocol_2eproto = nullptr;

const uint32_t TableStruct_MMO_5fprotocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _impl_.resp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _impl_.myinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ObjectEnter_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ObjectEnter_Notify, _impl_.otherinfo_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ObjectEnter_Notify, _impl_.speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ObjectExit_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ObjectExit_Notify, _impl_.otherid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Move_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Move_Req, _impl_.dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Move_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Move_Notify, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Move_Notify, _impl_.dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Idle_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::Idle_Notify, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeQuickSlot_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeQuickSlot_Req, _impl_.keycode_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeQuickSlot_Req, _impl_.skillname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseSkill_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseSkill_Req, _impl_.keycode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseSkill_Resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseSkill_Resp, _impl_.who_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseSkill_Resp, _impl_.skillname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::NormalAttack_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::NormalAttack_Notify, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.maxhp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.maxmp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.atk_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.def_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.speed_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.hp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::ChangeStats_Notify, _impl_.mp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.slotidx_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.maxhp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.maxmp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.atk_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.def_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.speed_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.hp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetEquipment_Notify, _impl_.mp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetConsume_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetConsume_Notify, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetConsume_Notify, _impl_.slotidx_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::GetConsume_Notify, _impl_.cnt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseItem_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseItem_Req, _impl_.itemtype_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::UseItem_Req, _impl_.slotidx_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protocol::mmo::EnterGame_Resp)},
  { 8, -1, -1, sizeof(::protocol::mmo::ObjectEnter_Notify)},
  { 16, -1, -1, sizeof(::protocol::mmo::ObjectExit_Notify)},
  { 23, -1, -1, sizeof(::protocol::mmo::Move_Req)},
  { 30, -1, -1, sizeof(::protocol::mmo::Move_Notify)},
  { 38, -1, -1, sizeof(::protocol::mmo::Idle_Notify)},
  { 45, -1, -1, sizeof(::protocol::mmo::ChangeQuickSlot_Req)},
  { 53, -1, -1, sizeof(::protocol::mmo::UseSkill_Req)},
  { 60, -1, -1, sizeof(::protocol::mmo::UseSkill_Resp)},
  { 68, -1, -1, sizeof(::protocol::mmo::NormalAttack_Notify)},
  { 75, -1, -1, sizeof(::protocol::mmo::ChangeStats_Notify)},
  { 89, -1, -1, sizeof(::protocol::mmo::GetEquipment_Notify)},
  { 104, -1, -1, sizeof(::protocol::mmo::GetConsume_Notify)},
  { 113, -1, -1, sizeof(::protocol::mmo::UseItem_Req)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protocol::mmo::_EnterGame_Resp_default_instance_._instance,
  &::protocol::mmo::_ObjectEnter_Notify_default_instance_._instance,
  &::protocol::mmo::_ObjectExit_Notify_default_instance_._instance,
  &::protocol::mmo::_Move_Req_default_instance_._instance,
  &::protocol::mmo::_Move_Notify_default_instance_._instance,
  &::protocol::mmo::_Idle_Notify_default_instance_._instance,
  &::protocol::mmo::_ChangeQuickSlot_Req_default_instance_._instance,
  &::protocol::mmo::_UseSkill_Req_default_instance_._instance,
  &::protocol::mmo::_UseSkill_Resp_default_instance_._instance,
  &::protocol::mmo::_NormalAttack_Notify_default_instance_._instance,
  &::protocol::mmo::_ChangeStats_Notify_default_instance_._instance,
  &::protocol::mmo::_GetEquipment_Notify_default_instance_._instance,
  &::protocol::mmo::_GetConsume_Notify_default_instance_._instance,
  &::protocol::mmo::_UseItem_Req_default_instance_._instance,
};

const char descriptor_table_protodef_MMO_5fprotocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022MMO_protocol.proto\022\014protocol.mmo\032\016MMO_"
  "enum.proto\032\020MMO_struct.proto\"b\n\016EnterGam"
  "e_Resp\022&\n\004resp\030\001 \001(\0162\030.protocol.mmo.E_Re"
  "spCode\022(\n\006myInfo\030\002 \001(\0132\030.protocol.mmo.Ob"
  "jectInfo\"P\n\022ObjectEnter_Notify\022+\n\totherI"
  "nfo\030\001 \001(\0132\030.protocol.mmo.ObjectInfo\022\r\n\005s"
  "peed\030\002 \001(\005\"$\n\021ObjectExit_Notify\022\017\n\007other"
  "Id\030\001 \001(\005\",\n\010Move_Req\022 \n\003dir\030\001 \001(\0162\023.prot"
  "ocol.mmo.E_Dir\";\n\013Move_Notify\022\n\n\002id\030\001 \001("
  "\005\022 \n\003dir\030\002 \001(\0162\023.protocol.mmo.E_Dir\"\031\n\013I"
  "dle_Notify\022\n\n\002id\030\001 \001(\005\"R\n\023ChangeQuickSlo"
  "t_Req\022(\n\007keycode\030\001 \001(\0162\027.protocol.mmo.E_"
  "KeyCode\022\021\n\tskillName\030\002 \001(\t\"8\n\014UseSkill_R"
  "eq\022(\n\007keycode\030\001 \001(\0162\027.protocol.mmo.E_Key"
  "Code\"I\n\rUseSkill_Resp\022%\n\003who\030\001 \001(\0132\030.pro"
  "tocol.mmo.ObjectInfo\022\021\n\tskillName\030\002 \001(\t\""
  "!\n\023NormalAttack_Notify\022\n\n\002id\030\001 \001(\005\"\177\n\022Ch"
  "angeStats_Notify\022\n\n\002id\030\001 \001(\005\022\r\n\005maxHp\030\002 "
  "\001(\005\022\r\n\005maxMp\030\003 \001(\005\022\013\n\003atk\030\004 \001(\005\022\013\n\003def\030\005"
  " \001(\005\022\r\n\005speed\030\006 \001(\005\022\n\n\002hp\030\007 \001(\005\022\n\n\002mp\030\010 "
  "\001(\005\"\221\001\n\023GetEquipment_Notify\022\n\n\002id\030\001 \001(\005\022"
  "\017\n\007slotIdx\030\002 \001(\005\022\r\n\005maxHp\030\003 \001(\005\022\r\n\005maxMp"
  "\030\004 \001(\005\022\013\n\003atk\030\005 \001(\005\022\013\n\003def\030\006 \001(\005\022\r\n\005spee"
  "d\030\007 \001(\005\022\n\n\002hp\030\010 \001(\005\022\n\n\002mp\030\t \001(\005\"=\n\021GetCo"
  "nsume_Notify\022\n\n\002id\030\001 \001(\005\022\017\n\007slotIdx\030\002 \001("
  "\005\022\013\n\003cnt\030\003 \001(\005\"J\n\013UseItem_Req\022*\n\010itemTyp"
  "e\030\001 \001(\0162\030.protocol.mmo.E_ItemType\022\017\n\007slo"
  "tIdx\030\002 \001(\005b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_MMO_5fprotocol_2eproto_deps[2] = {
  &::descriptor_table_MMO_5fenum_2eproto,
  &::descriptor_table_MMO_5fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_MMO_5fprotocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MMO_5fprotocol_2eproto = {
    false, false, 1098, descriptor_table_protodef_MMO_5fprotocol_2eproto,
    "MMO_protocol.proto",
    &descriptor_table_MMO_5fprotocol_2eproto_once, descriptor_table_MMO_5fprotocol_2eproto_deps, 2, 14,
    schemas, file_default_instances, TableStruct_MMO_5fprotocol_2eproto::offsets,
    file_level_metadata_MMO_5fprotocol_2eproto, file_level_enum_descriptors_MMO_5fprotocol_2eproto,
    file_level_service_descriptors_MMO_5fprotocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MMO_5fprotocol_2eproto_getter() {
  return &descriptor_table_MMO_5fprotocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MMO_5fprotocol_2eproto(&descriptor_table_MMO_5fprotocol_2eproto);
namespace protocol {
namespace mmo {

// ===================================================================

class EnterGame_Resp::_Internal {
 public:
  static const ::protocol::mmo::ObjectInfo& myinfo(const EnterGame_Resp* msg);
};

const ::protocol::mmo::ObjectInfo&
EnterGame_Resp::_Internal::myinfo(const EnterGame_Resp* msg) {
  return *msg->_impl_.myinfo_;
}
void EnterGame_Resp::clear_myinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.myinfo_ != nullptr) {
    delete _impl_.myinfo_;
  }
  _impl_.myinfo_ = nullptr;
}
EnterGame_Resp::EnterGame_Resp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.EnterGame_Resp)
}
EnterGame_Resp::EnterGame_Resp(const EnterGame_Resp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterGame_Resp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.myinfo_){nullptr}
    , decltype(_impl_.resp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_myinfo()) {
    _this->_impl_.myinfo_ = new ::protocol::mmo::ObjectInfo(*from._impl_.myinfo_);
  }
  _this->_impl_.resp_ = from._impl_.resp_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.EnterGame_Resp)
}

inline void EnterGame_Resp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.myinfo_){nullptr}
    , decltype(_impl_.resp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnterGame_Resp::~EnterGame_Resp() {
  // @@protoc_insertion_point(destructor:protocol.mmo.EnterGame_Resp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterGame_Resp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.myinfo_;
}

void EnterGame_Resp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterGame_Resp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.EnterGame_Resp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.myinfo_ != nullptr) {
    delete _impl_.myinfo_;
  }
  _impl_.myinfo_ = nullptr;
  _impl_.resp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterGame_Resp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.E_RespCode resp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resp(static_cast<::protocol::mmo::E_RespCode>(val));
        } else
          goto handle_unusual;
        continue;
      // .protocol.mmo.ObjectInfo myInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_myinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterGame_Resp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.EnterGame_Resp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.E_RespCode resp = 1;
  if (this->_internal_resp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_resp(), target);
  }

  // .protocol.mmo.ObjectInfo myInfo = 2;
  if (this->_internal_has_myinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::myinfo(this),
        _Internal::myinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.EnterGame_Resp)
  return target;
}

size_t EnterGame_Resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.EnterGame_Resp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.mmo.ObjectInfo myInfo = 2;
  if (this->_internal_has_myinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.myinfo_);
  }

  // .protocol.mmo.E_RespCode resp = 1;
  if (this->_internal_resp() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_resp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterGame_Resp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterGame_Resp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterGame_Resp::GetClassData() const { return &_class_data_; }


void EnterGame_Resp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterGame_Resp*>(&to_msg);
  auto& from = static_cast<const EnterGame_Resp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.EnterGame_Resp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_myinfo()) {
    _this->_internal_mutable_myinfo()->::protocol::mmo::ObjectInfo::MergeFrom(
        from._internal_myinfo());
  }
  if (from._internal_resp() != 0) {
    _this->_internal_set_resp(from._internal_resp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterGame_Resp::CopyFrom(const EnterGame_Resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.EnterGame_Resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterGame_Resp::IsInitialized() const {
  return true;
}

void EnterGame_Resp::InternalSwap(EnterGame_Resp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterGame_Resp, _impl_.resp_)
      + sizeof(EnterGame_Resp::_impl_.resp_)
      - PROTOBUF_FIELD_OFFSET(EnterGame_Resp, _impl_.myinfo_)>(
          reinterpret_cast<char*>(&_impl_.myinfo_),
          reinterpret_cast<char*>(&other->_impl_.myinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterGame_Resp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[0]);
}

// ===================================================================

class ObjectEnter_Notify::_Internal {
 public:
  static const ::protocol::mmo::ObjectInfo& otherinfo(const ObjectEnter_Notify* msg);
};

const ::protocol::mmo::ObjectInfo&
ObjectEnter_Notify::_Internal::otherinfo(const ObjectEnter_Notify* msg) {
  return *msg->_impl_.otherinfo_;
}
void ObjectEnter_Notify::clear_otherinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.otherinfo_ != nullptr) {
    delete _impl_.otherinfo_;
  }
  _impl_.otherinfo_ = nullptr;
}
ObjectEnter_Notify::ObjectEnter_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.ObjectEnter_Notify)
}
ObjectEnter_Notify::ObjectEnter_Notify(const ObjectEnter_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectEnter_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.otherinfo_){nullptr}
    , decltype(_impl_.speed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_otherinfo()) {
    _this->_impl_.otherinfo_ = new ::protocol::mmo::ObjectInfo(*from._impl_.otherinfo_);
  }
  _this->_impl_.speed_ = from._impl_.speed_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.ObjectEnter_Notify)
}

inline void ObjectEnter_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.otherinfo_){nullptr}
    , decltype(_impl_.speed_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ObjectEnter_Notify::~ObjectEnter_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.ObjectEnter_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectEnter_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.otherinfo_;
}

void ObjectEnter_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectEnter_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.ObjectEnter_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.otherinfo_ != nullptr) {
    delete _impl_.otherinfo_;
  }
  _impl_.otherinfo_ = nullptr;
  _impl_.speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectEnter_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.ObjectInfo otherInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_otherinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 speed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectEnter_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.ObjectEnter_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.ObjectInfo otherInfo = 1;
  if (this->_internal_has_otherinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::otherinfo(this),
        _Internal::otherinfo(this).GetCachedSize(), target, stream);
  }

  // int32 speed = 2;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.ObjectEnter_Notify)
  return target;
}

size_t ObjectEnter_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.ObjectEnter_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.mmo.ObjectInfo otherInfo = 1;
  if (this->_internal_has_otherinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.otherinfo_);
  }

  // int32 speed = 2;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_speed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectEnter_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectEnter_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectEnter_Notify::GetClassData() const { return &_class_data_; }


void ObjectEnter_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectEnter_Notify*>(&to_msg);
  auto& from = static_cast<const ObjectEnter_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.ObjectEnter_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_otherinfo()) {
    _this->_internal_mutable_otherinfo()->::protocol::mmo::ObjectInfo::MergeFrom(
        from._internal_otherinfo());
  }
  if (from._internal_speed() != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectEnter_Notify::CopyFrom(const ObjectEnter_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.ObjectEnter_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectEnter_Notify::IsInitialized() const {
  return true;
}

void ObjectEnter_Notify::InternalSwap(ObjectEnter_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectEnter_Notify, _impl_.speed_)
      + sizeof(ObjectEnter_Notify::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(ObjectEnter_Notify, _impl_.otherinfo_)>(
          reinterpret_cast<char*>(&_impl_.otherinfo_),
          reinterpret_cast<char*>(&other->_impl_.otherinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectEnter_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[1]);
}

// ===================================================================

class ObjectExit_Notify::_Internal {
 public:
};

ObjectExit_Notify::ObjectExit_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.ObjectExit_Notify)
}
ObjectExit_Notify::ObjectExit_Notify(const ObjectExit_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObjectExit_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.otherid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.otherid_ = from._impl_.otherid_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.ObjectExit_Notify)
}

inline void ObjectExit_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.otherid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ObjectExit_Notify::~ObjectExit_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.ObjectExit_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObjectExit_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ObjectExit_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObjectExit_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.ObjectExit_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.otherid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectExit_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 otherId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.otherid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectExit_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.ObjectExit_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 otherId = 1;
  if (this->_internal_otherid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_otherid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.ObjectExit_Notify)
  return target;
}

size_t ObjectExit_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.ObjectExit_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 otherId = 1;
  if (this->_internal_otherid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_otherid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectExit_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObjectExit_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectExit_Notify::GetClassData() const { return &_class_data_; }


void ObjectExit_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObjectExit_Notify*>(&to_msg);
  auto& from = static_cast<const ObjectExit_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.ObjectExit_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_otherid() != 0) {
    _this->_internal_set_otherid(from._internal_otherid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectExit_Notify::CopyFrom(const ObjectExit_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.ObjectExit_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectExit_Notify::IsInitialized() const {
  return true;
}

void ObjectExit_Notify::InternalSwap(ObjectExit_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.otherid_, other->_impl_.otherid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectExit_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[2]);
}

// ===================================================================

class Move_Req::_Internal {
 public:
};

Move_Req::Move_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.Move_Req)
}
Move_Req::Move_Req(const Move_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Move_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dir_ = from._impl_.dir_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.Move_Req)
}

inline void Move_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Move_Req::~Move_Req() {
  // @@protoc_insertion_point(destructor:protocol.mmo.Move_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Move_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Move_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Move_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.Move_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dir_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Move_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.E_Dir dir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::protocol::mmo::E_Dir>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Move_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.Move_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.E_Dir dir = 1;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.Move_Req)
  return target;
}

size_t Move_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.Move_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.mmo.E_Dir dir = 1;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Move_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Move_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Move_Req::GetClassData() const { return &_class_data_; }


void Move_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Move_Req*>(&to_msg);
  auto& from = static_cast<const Move_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.Move_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Move_Req::CopyFrom(const Move_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.Move_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Move_Req::IsInitialized() const {
  return true;
}

void Move_Req::InternalSwap(Move_Req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dir_, other->_impl_.dir_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Move_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[3]);
}

// ===================================================================

class Move_Notify::_Internal {
 public:
};

Move_Notify::Move_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.Move_Notify)
}
Move_Notify::Move_Notify(const Move_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Move_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dir_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.dir_));
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.Move_Notify)
}

inline void Move_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Move_Notify::~Move_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.Move_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Move_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Move_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Move_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.Move_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dir_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.dir_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Move_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protocol.mmo.E_Dir dir = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::protocol::mmo::E_Dir>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Move_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.Move_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // .protocol.mmo.E_Dir dir = 2;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.Move_Notify)
  return target;
}

size_t Move_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.Move_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // .protocol.mmo.E_Dir dir = 2;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Move_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Move_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Move_Notify::GetClassData() const { return &_class_data_; }


void Move_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Move_Notify*>(&to_msg);
  auto& from = static_cast<const Move_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.Move_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Move_Notify::CopyFrom(const Move_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.Move_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Move_Notify::IsInitialized() const {
  return true;
}

void Move_Notify::InternalSwap(Move_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Move_Notify, _impl_.dir_)
      + sizeof(Move_Notify::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(Move_Notify, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Move_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[4]);
}

// ===================================================================

class Idle_Notify::_Internal {
 public:
};

Idle_Notify::Idle_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.Idle_Notify)
}
Idle_Notify::Idle_Notify(const Idle_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Idle_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.Idle_Notify)
}

inline void Idle_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Idle_Notify::~Idle_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.Idle_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Idle_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Idle_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Idle_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.Idle_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Idle_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Idle_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.Idle_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.Idle_Notify)
  return target;
}

size_t Idle_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.Idle_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Idle_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Idle_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Idle_Notify::GetClassData() const { return &_class_data_; }


void Idle_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Idle_Notify*>(&to_msg);
  auto& from = static_cast<const Idle_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.Idle_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Idle_Notify::CopyFrom(const Idle_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.Idle_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idle_Notify::IsInitialized() const {
  return true;
}

void Idle_Notify::InternalSwap(Idle_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Idle_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[5]);
}

// ===================================================================

class ChangeQuickSlot_Req::_Internal {
 public:
};

ChangeQuickSlot_Req::ChangeQuickSlot_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.ChangeQuickSlot_Req)
}
ChangeQuickSlot_Req::ChangeQuickSlot_Req(const ChangeQuickSlot_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChangeQuickSlot_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.skillname_){}
    , decltype(_impl_.keycode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.skillname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.skillname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_skillname().empty()) {
    _this->_impl_.skillname_.Set(from._internal_skillname(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.keycode_ = from._impl_.keycode_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.ChangeQuickSlot_Req)
}

inline void ChangeQuickSlot_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.skillname_){}
    , decltype(_impl_.keycode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.skillname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.skillname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChangeQuickSlot_Req::~ChangeQuickSlot_Req() {
  // @@protoc_insertion_point(destructor:protocol.mmo.ChangeQuickSlot_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeQuickSlot_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.skillname_.Destroy();
}

void ChangeQuickSlot_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChangeQuickSlot_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.ChangeQuickSlot_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skillname_.ClearToEmpty();
  _impl_.keycode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeQuickSlot_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.E_KeyCode keycode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_keycode(static_cast<::protocol::mmo::E_KeyCode>(val));
        } else
          goto handle_unusual;
        continue;
      // string skillName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_skillname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.mmo.ChangeQuickSlot_Req.skillName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeQuickSlot_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.ChangeQuickSlot_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.E_KeyCode keycode = 1;
  if (this->_internal_keycode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_keycode(), target);
  }

  // string skillName = 2;
  if (!this->_internal_skillname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_skillname().data(), static_cast<int>(this->_internal_skillname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.mmo.ChangeQuickSlot_Req.skillName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_skillname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.ChangeQuickSlot_Req)
  return target;
}

size_t ChangeQuickSlot_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.ChangeQuickSlot_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string skillName = 2;
  if (!this->_internal_skillname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_skillname());
  }

  // .protocol.mmo.E_KeyCode keycode = 1;
  if (this->_internal_keycode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_keycode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeQuickSlot_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChangeQuickSlot_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeQuickSlot_Req::GetClassData() const { return &_class_data_; }


void ChangeQuickSlot_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChangeQuickSlot_Req*>(&to_msg);
  auto& from = static_cast<const ChangeQuickSlot_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.ChangeQuickSlot_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_skillname().empty()) {
    _this->_internal_set_skillname(from._internal_skillname());
  }
  if (from._internal_keycode() != 0) {
    _this->_internal_set_keycode(from._internal_keycode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeQuickSlot_Req::CopyFrom(const ChangeQuickSlot_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.ChangeQuickSlot_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeQuickSlot_Req::IsInitialized() const {
  return true;
}

void ChangeQuickSlot_Req::InternalSwap(ChangeQuickSlot_Req* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.skillname_, lhs_arena,
      &other->_impl_.skillname_, rhs_arena
  );
  swap(_impl_.keycode_, other->_impl_.keycode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeQuickSlot_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[6]);
}

// ===================================================================

class UseSkill_Req::_Internal {
 public:
};

UseSkill_Req::UseSkill_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.UseSkill_Req)
}
UseSkill_Req::UseSkill_Req(const UseSkill_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseSkill_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keycode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.keycode_ = from._impl_.keycode_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.UseSkill_Req)
}

inline void UseSkill_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.keycode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseSkill_Req::~UseSkill_Req() {
  // @@protoc_insertion_point(destructor:protocol.mmo.UseSkill_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseSkill_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseSkill_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseSkill_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.UseSkill_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keycode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseSkill_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.E_KeyCode keycode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_keycode(static_cast<::protocol::mmo::E_KeyCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseSkill_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.UseSkill_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.E_KeyCode keycode = 1;
  if (this->_internal_keycode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_keycode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.UseSkill_Req)
  return target;
}

size_t UseSkill_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.UseSkill_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.mmo.E_KeyCode keycode = 1;
  if (this->_internal_keycode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_keycode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseSkill_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseSkill_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseSkill_Req::GetClassData() const { return &_class_data_; }


void UseSkill_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseSkill_Req*>(&to_msg);
  auto& from = static_cast<const UseSkill_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.UseSkill_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_keycode() != 0) {
    _this->_internal_set_keycode(from._internal_keycode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseSkill_Req::CopyFrom(const UseSkill_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.UseSkill_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseSkill_Req::IsInitialized() const {
  return true;
}

void UseSkill_Req::InternalSwap(UseSkill_Req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.keycode_, other->_impl_.keycode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UseSkill_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[7]);
}

// ===================================================================

class UseSkill_Resp::_Internal {
 public:
  static const ::protocol::mmo::ObjectInfo& who(const UseSkill_Resp* msg);
};

const ::protocol::mmo::ObjectInfo&
UseSkill_Resp::_Internal::who(const UseSkill_Resp* msg) {
  return *msg->_impl_.who_;
}
void UseSkill_Resp::clear_who() {
  if (GetArenaForAllocation() == nullptr && _impl_.who_ != nullptr) {
    delete _impl_.who_;
  }
  _impl_.who_ = nullptr;
}
UseSkill_Resp::UseSkill_Resp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.UseSkill_Resp)
}
UseSkill_Resp::UseSkill_Resp(const UseSkill_Resp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseSkill_Resp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.skillname_){}
    , decltype(_impl_.who_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.skillname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.skillname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_skillname().empty()) {
    _this->_impl_.skillname_.Set(from._internal_skillname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_who()) {
    _this->_impl_.who_ = new ::protocol::mmo::ObjectInfo(*from._impl_.who_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.UseSkill_Resp)
}

inline void UseSkill_Resp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.skillname_){}
    , decltype(_impl_.who_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.skillname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.skillname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UseSkill_Resp::~UseSkill_Resp() {
  // @@protoc_insertion_point(destructor:protocol.mmo.UseSkill_Resp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseSkill_Resp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.skillname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.who_;
}

void UseSkill_Resp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseSkill_Resp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.UseSkill_Resp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skillname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.who_ != nullptr) {
    delete _impl_.who_;
  }
  _impl_.who_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseSkill_Resp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.ObjectInfo who = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_who(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string skillName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_skillname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.mmo.UseSkill_Resp.skillName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseSkill_Resp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.UseSkill_Resp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.ObjectInfo who = 1;
  if (this->_internal_has_who()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::who(this),
        _Internal::who(this).GetCachedSize(), target, stream);
  }

  // string skillName = 2;
  if (!this->_internal_skillname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_skillname().data(), static_cast<int>(this->_internal_skillname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.mmo.UseSkill_Resp.skillName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_skillname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.UseSkill_Resp)
  return target;
}

size_t UseSkill_Resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.UseSkill_Resp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string skillName = 2;
  if (!this->_internal_skillname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_skillname());
  }

  // .protocol.mmo.ObjectInfo who = 1;
  if (this->_internal_has_who()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.who_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseSkill_Resp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseSkill_Resp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseSkill_Resp::GetClassData() const { return &_class_data_; }


void UseSkill_Resp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseSkill_Resp*>(&to_msg);
  auto& from = static_cast<const UseSkill_Resp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.UseSkill_Resp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_skillname().empty()) {
    _this->_internal_set_skillname(from._internal_skillname());
  }
  if (from._internal_has_who()) {
    _this->_internal_mutable_who()->::protocol::mmo::ObjectInfo::MergeFrom(
        from._internal_who());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseSkill_Resp::CopyFrom(const UseSkill_Resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.UseSkill_Resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseSkill_Resp::IsInitialized() const {
  return true;
}

void UseSkill_Resp::InternalSwap(UseSkill_Resp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.skillname_, lhs_arena,
      &other->_impl_.skillname_, rhs_arena
  );
  swap(_impl_.who_, other->_impl_.who_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UseSkill_Resp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[8]);
}

// ===================================================================

class NormalAttack_Notify::_Internal {
 public:
};

NormalAttack_Notify::NormalAttack_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.NormalAttack_Notify)
}
NormalAttack_Notify::NormalAttack_Notify(const NormalAttack_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NormalAttack_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.NormalAttack_Notify)
}

inline void NormalAttack_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NormalAttack_Notify::~NormalAttack_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.NormalAttack_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NormalAttack_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NormalAttack_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NormalAttack_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.NormalAttack_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NormalAttack_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NormalAttack_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.NormalAttack_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.NormalAttack_Notify)
  return target;
}

size_t NormalAttack_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.NormalAttack_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NormalAttack_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NormalAttack_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NormalAttack_Notify::GetClassData() const { return &_class_data_; }


void NormalAttack_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NormalAttack_Notify*>(&to_msg);
  auto& from = static_cast<const NormalAttack_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.NormalAttack_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NormalAttack_Notify::CopyFrom(const NormalAttack_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.NormalAttack_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NormalAttack_Notify::IsInitialized() const {
  return true;
}

void NormalAttack_Notify::InternalSwap(NormalAttack_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NormalAttack_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[9]);
}

// ===================================================================

class ChangeStats_Notify::_Internal {
 public:
};

ChangeStats_Notify::ChangeStats_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.ChangeStats_Notify)
}
ChangeStats_Notify::ChangeStats_Notify(const ChangeStats_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChangeStats_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.maxhp_){}
    , decltype(_impl_.maxmp_){}
    , decltype(_impl_.atk_){}
    , decltype(_impl_.def_){}
    , decltype(_impl_.speed_){}
    , decltype(_impl_.hp_){}
    , decltype(_impl_.mp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.mp_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.mp_));
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.ChangeStats_Notify)
}

inline void ChangeStats_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.maxhp_){0}
    , decltype(_impl_.maxmp_){0}
    , decltype(_impl_.atk_){0}
    , decltype(_impl_.def_){0}
    , decltype(_impl_.speed_){0}
    , decltype(_impl_.hp_){0}
    , decltype(_impl_.mp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChangeStats_Notify::~ChangeStats_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.ChangeStats_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeStats_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ChangeStats_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChangeStats_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.ChangeStats_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.mp_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.mp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeStats_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxHp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.maxhp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxMp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.maxmp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 atk = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.atk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 def = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.def_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 mp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeStats_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.ChangeStats_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 maxHp = 2;
  if (this->_internal_maxhp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_maxhp(), target);
  }

  // int32 maxMp = 3;
  if (this->_internal_maxmp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_maxmp(), target);
  }

  // int32 atk = 4;
  if (this->_internal_atk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_atk(), target);
  }

  // int32 def = 5;
  if (this->_internal_def() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_def(), target);
  }

  // int32 speed = 6;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_speed(), target);
  }

  // int32 hp = 7;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_hp(), target);
  }

  // int32 mp = 8;
  if (this->_internal_mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_mp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.ChangeStats_Notify)
  return target;
}

size_t ChangeStats_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.ChangeStats_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 maxHp = 2;
  if (this->_internal_maxhp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxhp());
  }

  // int32 maxMp = 3;
  if (this->_internal_maxmp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxmp());
  }

  // int32 atk = 4;
  if (this->_internal_atk() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_atk());
  }

  // int32 def = 5;
  if (this->_internal_def() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_def());
  }

  // int32 speed = 6;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_speed());
  }

  // int32 hp = 7;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
  }

  // int32 mp = 8;
  if (this->_internal_mp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeStats_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChangeStats_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeStats_Notify::GetClassData() const { return &_class_data_; }


void ChangeStats_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChangeStats_Notify*>(&to_msg);
  auto& from = static_cast<const ChangeStats_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.ChangeStats_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_maxhp() != 0) {
    _this->_internal_set_maxhp(from._internal_maxhp());
  }
  if (from._internal_maxmp() != 0) {
    _this->_internal_set_maxmp(from._internal_maxmp());
  }
  if (from._internal_atk() != 0) {
    _this->_internal_set_atk(from._internal_atk());
  }
  if (from._internal_def() != 0) {
    _this->_internal_set_def(from._internal_def());
  }
  if (from._internal_speed() != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  if (from._internal_mp() != 0) {
    _this->_internal_set_mp(from._internal_mp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeStats_Notify::CopyFrom(const ChangeStats_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.ChangeStats_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeStats_Notify::IsInitialized() const {
  return true;
}

void ChangeStats_Notify::InternalSwap(ChangeStats_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeStats_Notify, _impl_.mp_)
      + sizeof(ChangeStats_Notify::_impl_.mp_)
      - PROTOBUF_FIELD_OFFSET(ChangeStats_Notify, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeStats_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[10]);
}

// ===================================================================

class GetEquipment_Notify::_Internal {
 public:
};

GetEquipment_Notify::GetEquipment_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.GetEquipment_Notify)
}
GetEquipment_Notify::GetEquipment_Notify(const GetEquipment_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEquipment_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.slotidx_){}
    , decltype(_impl_.maxhp_){}
    , decltype(_impl_.maxmp_){}
    , decltype(_impl_.atk_){}
    , decltype(_impl_.def_){}
    , decltype(_impl_.speed_){}
    , decltype(_impl_.hp_){}
    , decltype(_impl_.mp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.mp_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.mp_));
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.GetEquipment_Notify)
}

inline void GetEquipment_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.slotidx_){0}
    , decltype(_impl_.maxhp_){0}
    , decltype(_impl_.maxmp_){0}
    , decltype(_impl_.atk_){0}
    , decltype(_impl_.def_){0}
    , decltype(_impl_.speed_){0}
    , decltype(_impl_.hp_){0}
    , decltype(_impl_.mp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEquipment_Notify::~GetEquipment_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.GetEquipment_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEquipment_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetEquipment_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEquipment_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.GetEquipment_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.mp_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.mp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEquipment_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slotIdx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.slotidx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxHp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.maxhp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxMp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.maxmp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 atk = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.atk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 def = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.def_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 speed = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 mp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.mp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEquipment_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.GetEquipment_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 slotIdx = 2;
  if (this->_internal_slotidx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_slotidx(), target);
  }

  // int32 maxHp = 3;
  if (this->_internal_maxhp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_maxhp(), target);
  }

  // int32 maxMp = 4;
  if (this->_internal_maxmp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_maxmp(), target);
  }

  // int32 atk = 5;
  if (this->_internal_atk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_atk(), target);
  }

  // int32 def = 6;
  if (this->_internal_def() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_def(), target);
  }

  // int32 speed = 7;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_speed(), target);
  }

  // int32 hp = 8;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_hp(), target);
  }

  // int32 mp = 9;
  if (this->_internal_mp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_mp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.GetEquipment_Notify)
  return target;
}

size_t GetEquipment_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.GetEquipment_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 slotIdx = 2;
  if (this->_internal_slotidx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slotidx());
  }

  // int32 maxHp = 3;
  if (this->_internal_maxhp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxhp());
  }

  // int32 maxMp = 4;
  if (this->_internal_maxmp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxmp());
  }

  // int32 atk = 5;
  if (this->_internal_atk() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_atk());
  }

  // int32 def = 6;
  if (this->_internal_def() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_def());
  }

  // int32 speed = 7;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_speed());
  }

  // int32 hp = 8;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
  }

  // int32 mp = 9;
  if (this->_internal_mp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEquipment_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEquipment_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEquipment_Notify::GetClassData() const { return &_class_data_; }


void GetEquipment_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEquipment_Notify*>(&to_msg);
  auto& from = static_cast<const GetEquipment_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.GetEquipment_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_slotidx() != 0) {
    _this->_internal_set_slotidx(from._internal_slotidx());
  }
  if (from._internal_maxhp() != 0) {
    _this->_internal_set_maxhp(from._internal_maxhp());
  }
  if (from._internal_maxmp() != 0) {
    _this->_internal_set_maxmp(from._internal_maxmp());
  }
  if (from._internal_atk() != 0) {
    _this->_internal_set_atk(from._internal_atk());
  }
  if (from._internal_def() != 0) {
    _this->_internal_set_def(from._internal_def());
  }
  if (from._internal_speed() != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  if (from._internal_mp() != 0) {
    _this->_internal_set_mp(from._internal_mp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEquipment_Notify::CopyFrom(const GetEquipment_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.GetEquipment_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEquipment_Notify::IsInitialized() const {
  return true;
}

void GetEquipment_Notify::InternalSwap(GetEquipment_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEquipment_Notify, _impl_.mp_)
      + sizeof(GetEquipment_Notify::_impl_.mp_)
      - PROTOBUF_FIELD_OFFSET(GetEquipment_Notify, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEquipment_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[11]);
}

// ===================================================================

class GetConsume_Notify::_Internal {
 public:
};

GetConsume_Notify::GetConsume_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.GetConsume_Notify)
}
GetConsume_Notify::GetConsume_Notify(const GetConsume_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetConsume_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.slotidx_){}
    , decltype(_impl_.cnt_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.cnt_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.cnt_));
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.GetConsume_Notify)
}

inline void GetConsume_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.slotidx_){0}
    , decltype(_impl_.cnt_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetConsume_Notify::~GetConsume_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.GetConsume_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetConsume_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetConsume_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetConsume_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.GetConsume_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.cnt_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.cnt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConsume_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 slotIdx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.slotidx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 cnt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.cnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConsume_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.GetConsume_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 slotIdx = 2;
  if (this->_internal_slotidx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_slotidx(), target);
  }

  // int32 cnt = 3;
  if (this->_internal_cnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_cnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.GetConsume_Notify)
  return target;
}

size_t GetConsume_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.GetConsume_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 slotIdx = 2;
  if (this->_internal_slotidx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slotidx());
  }

  // int32 cnt = 3;
  if (this->_internal_cnt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConsume_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetConsume_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConsume_Notify::GetClassData() const { return &_class_data_; }


void GetConsume_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetConsume_Notify*>(&to_msg);
  auto& from = static_cast<const GetConsume_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.GetConsume_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_slotidx() != 0) {
    _this->_internal_set_slotidx(from._internal_slotidx());
  }
  if (from._internal_cnt() != 0) {
    _this->_internal_set_cnt(from._internal_cnt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConsume_Notify::CopyFrom(const GetConsume_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.GetConsume_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConsume_Notify::IsInitialized() const {
  return true;
}

void GetConsume_Notify::InternalSwap(GetConsume_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConsume_Notify, _impl_.cnt_)
      + sizeof(GetConsume_Notify::_impl_.cnt_)
      - PROTOBUF_FIELD_OFFSET(GetConsume_Notify, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConsume_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[12]);
}

// ===================================================================

class UseItem_Req::_Internal {
 public:
};

UseItem_Req::UseItem_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.UseItem_Req)
}
UseItem_Req::UseItem_Req(const UseItem_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseItem_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.itemtype_){}
    , decltype(_impl_.slotidx_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.itemtype_, &from._impl_.itemtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slotidx_) -
    reinterpret_cast<char*>(&_impl_.itemtype_)) + sizeof(_impl_.slotidx_));
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.UseItem_Req)
}

inline void UseItem_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.itemtype_){0}
    , decltype(_impl_.slotidx_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseItem_Req::~UseItem_Req() {
  // @@protoc_insertion_point(destructor:protocol.mmo.UseItem_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseItem_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseItem_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseItem_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.UseItem_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.itemtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slotidx_) -
      reinterpret_cast<char*>(&_impl_.itemtype_)) + sizeof(_impl_.slotidx_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseItem_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.E_ItemType itemType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_itemtype(static_cast<::protocol::mmo::E_ItemType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 slotIdx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.slotidx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseItem_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.UseItem_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.E_ItemType itemType = 1;
  if (this->_internal_itemtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_itemtype(), target);
  }

  // int32 slotIdx = 2;
  if (this->_internal_slotidx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_slotidx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.UseItem_Req)
  return target;
}

size_t UseItem_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.UseItem_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.mmo.E_ItemType itemType = 1;
  if (this->_internal_itemtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_itemtype());
  }

  // int32 slotIdx = 2;
  if (this->_internal_slotidx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slotidx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseItem_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseItem_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseItem_Req::GetClassData() const { return &_class_data_; }


void UseItem_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseItem_Req*>(&to_msg);
  auto& from = static_cast<const UseItem_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.UseItem_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_itemtype() != 0) {
    _this->_internal_set_itemtype(from._internal_itemtype());
  }
  if (from._internal_slotidx() != 0) {
    _this->_internal_set_slotidx(from._internal_slotidx());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseItem_Req::CopyFrom(const UseItem_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.UseItem_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItem_Req::IsInitialized() const {
  return true;
}

void UseItem_Req::InternalSwap(UseItem_Req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UseItem_Req, _impl_.slotidx_)
      + sizeof(UseItem_Req::_impl_.slotidx_)
      - PROTOBUF_FIELD_OFFSET(UseItem_Req, _impl_.itemtype_)>(
          reinterpret_cast<char*>(&_impl_.itemtype_),
          reinterpret_cast<char*>(&other->_impl_.itemtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UseItem_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mmo
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::mmo::EnterGame_Resp*
Arena::CreateMaybeMessage< ::protocol::mmo::EnterGame_Resp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::EnterGame_Resp >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::ObjectEnter_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::ObjectEnter_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::ObjectEnter_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::ObjectExit_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::ObjectExit_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::ObjectExit_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::Move_Req*
Arena::CreateMaybeMessage< ::protocol::mmo::Move_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::Move_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::Move_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::Move_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::Move_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::Idle_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::Idle_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::Idle_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::ChangeQuickSlot_Req*
Arena::CreateMaybeMessage< ::protocol::mmo::ChangeQuickSlot_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::ChangeQuickSlot_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::UseSkill_Req*
Arena::CreateMaybeMessage< ::protocol::mmo::UseSkill_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::UseSkill_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::UseSkill_Resp*
Arena::CreateMaybeMessage< ::protocol::mmo::UseSkill_Resp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::UseSkill_Resp >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::NormalAttack_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::NormalAttack_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::NormalAttack_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::ChangeStats_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::ChangeStats_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::ChangeStats_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::GetEquipment_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::GetEquipment_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::GetEquipment_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::GetConsume_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::GetConsume_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::GetConsume_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::UseItem_Req*
Arena::CreateMaybeMessage< ::protocol::mmo::UseItem_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::UseItem_Req >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
