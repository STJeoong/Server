// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MMO_protocol.proto

#include "MMO_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protocol {
namespace mmo {
PROTOBUF_CONSTEXPR EnterGame_Resp::EnterGame_Resp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.players_)*/{}
  , /*decltype(_impl_.resp_)*/0
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnterGame_RespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterGame_RespDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterGame_RespDefaultTypeInternal() {}
  union {
    EnterGame_Resp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterGame_RespDefaultTypeInternal _EnterGame_Resp_default_instance_;
PROTOBUF_CONSTEXPR PlayerEnter_Notify::PlayerEnter_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlayerEnter_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerEnter_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerEnter_NotifyDefaultTypeInternal() {}
  union {
    PlayerEnter_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerEnter_NotifyDefaultTypeInternal _PlayerEnter_Notify_default_instance_;
PROTOBUF_CONSTEXPR PlayerExit_Notify::PlayerExit_Notify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlayerExit_NotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerExit_NotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerExit_NotifyDefaultTypeInternal() {}
  union {
    PlayerExit_Notify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerExit_NotifyDefaultTypeInternal _PlayerExit_Notify_default_instance_;
}  // namespace mmo
}  // namespace protocol
static ::_pb::Metadata file_level_metadata_MMO_5fprotocol_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_MMO_5fprotocol_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_MMO_5fprotocol_2eproto = nullptr;

const uint32_t TableStruct_MMO_5fprotocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _impl_.resp_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::EnterGame_Resp, _impl_.players_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::PlayerEnter_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::PlayerEnter_Notify, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::PlayerExit_Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::mmo::PlayerExit_Notify, _impl_.id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protocol::mmo::EnterGame_Resp)},
  { 9, -1, -1, sizeof(::protocol::mmo::PlayerEnter_Notify)},
  { 16, -1, -1, sizeof(::protocol::mmo::PlayerExit_Notify)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protocol::mmo::_EnterGame_Resp_default_instance_._instance,
  &::protocol::mmo::_PlayerEnter_Notify_default_instance_._instance,
  &::protocol::mmo::_PlayerExit_Notify_default_instance_._instance,
};

const char descriptor_table_protodef_MMO_5fprotocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022MMO_protocol.proto\022\014protocol.mmo\032\016MMO_"
  "enum.proto\032\020MMO_struct.proto\"o\n\016EnterGam"
  "e_Resp\022&\n\004resp\030\001 \001(\0162\030.protocol.mmo.E_Re"
  "spCode\022\n\n\002id\030\002 \001(\005\022)\n\007players\030\003 \003(\0132\030.pr"
  "otocol.mmo.ObjectInfo\"<\n\022PlayerEnter_Not"
  "ify\022&\n\004info\030\001 \001(\0132\030.protocol.mmo.ObjectI"
  "nfo\"\037\n\021PlayerExit_Notify\022\n\n\002id\030\001 \001(\005b\006pr"
  "oto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_MMO_5fprotocol_2eproto_deps[2] = {
  &::descriptor_table_MMO_5fenum_2eproto,
  &::descriptor_table_MMO_5fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_MMO_5fprotocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MMO_5fprotocol_2eproto = {
    false, false, 284, descriptor_table_protodef_MMO_5fprotocol_2eproto,
    "MMO_protocol.proto",
    &descriptor_table_MMO_5fprotocol_2eproto_once, descriptor_table_MMO_5fprotocol_2eproto_deps, 2, 3,
    schemas, file_default_instances, TableStruct_MMO_5fprotocol_2eproto::offsets,
    file_level_metadata_MMO_5fprotocol_2eproto, file_level_enum_descriptors_MMO_5fprotocol_2eproto,
    file_level_service_descriptors_MMO_5fprotocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MMO_5fprotocol_2eproto_getter() {
  return &descriptor_table_MMO_5fprotocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MMO_5fprotocol_2eproto(&descriptor_table_MMO_5fprotocol_2eproto);
namespace protocol {
namespace mmo {

// ===================================================================

class EnterGame_Resp::_Internal {
 public:
};

void EnterGame_Resp::clear_players() {
  _impl_.players_.Clear();
}
EnterGame_Resp::EnterGame_Resp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.EnterGame_Resp)
}
EnterGame_Resp::EnterGame_Resp(const EnterGame_Resp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterGame_Resp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.players_){from._impl_.players_}
    , decltype(_impl_.resp_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.resp_, &from._impl_.resp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.resp_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.EnterGame_Resp)
}

inline void EnterGame_Resp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.players_){arena}
    , decltype(_impl_.resp_){0}
    , decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnterGame_Resp::~EnterGame_Resp() {
  // @@protoc_insertion_point(destructor:protocol.mmo.EnterGame_Resp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterGame_Resp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.players_.~RepeatedPtrField();
}

void EnterGame_Resp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterGame_Resp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.EnterGame_Resp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  ::memset(&_impl_.resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.resp_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterGame_Resp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.E_RespCode resp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resp(static_cast<::protocol::mmo::E_RespCode>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .protocol.mmo.ObjectInfo players = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_players(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterGame_Resp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.EnterGame_Resp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.E_RespCode resp = 1;
  if (this->_internal_resp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_resp(), target);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // repeated .protocol.mmo.ObjectInfo players = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.EnterGame_Resp)
  return target;
}

size_t EnterGame_Resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.EnterGame_Resp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protocol.mmo.ObjectInfo players = 3;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_impl_.players_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protocol.mmo.E_RespCode resp = 1;
  if (this->_internal_resp() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_resp());
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterGame_Resp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterGame_Resp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterGame_Resp::GetClassData() const { return &_class_data_; }


void EnterGame_Resp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterGame_Resp*>(&to_msg);
  auto& from = static_cast<const EnterGame_Resp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.EnterGame_Resp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.players_.MergeFrom(from._impl_.players_);
  if (from._internal_resp() != 0) {
    _this->_internal_set_resp(from._internal_resp());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterGame_Resp::CopyFrom(const EnterGame_Resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.EnterGame_Resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterGame_Resp::IsInitialized() const {
  return true;
}

void EnterGame_Resp::InternalSwap(EnterGame_Resp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterGame_Resp, _impl_.id_)
      + sizeof(EnterGame_Resp::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(EnterGame_Resp, _impl_.resp_)>(
          reinterpret_cast<char*>(&_impl_.resp_),
          reinterpret_cast<char*>(&other->_impl_.resp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterGame_Resp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[0]);
}

// ===================================================================

class PlayerEnter_Notify::_Internal {
 public:
  static const ::protocol::mmo::ObjectInfo& info(const PlayerEnter_Notify* msg);
};

const ::protocol::mmo::ObjectInfo&
PlayerEnter_Notify::_Internal::info(const PlayerEnter_Notify* msg) {
  return *msg->_impl_.info_;
}
void PlayerEnter_Notify::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
PlayerEnter_Notify::PlayerEnter_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.PlayerEnter_Notify)
}
PlayerEnter_Notify::PlayerEnter_Notify(const PlayerEnter_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PlayerEnter_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::protocol::mmo::ObjectInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.PlayerEnter_Notify)
}

inline void PlayerEnter_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PlayerEnter_Notify::~PlayerEnter_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.PlayerEnter_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PlayerEnter_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void PlayerEnter_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlayerEnter_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.PlayerEnter_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayerEnter_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protocol.mmo.ObjectInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PlayerEnter_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.PlayerEnter_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.mmo.ObjectInfo info = 1;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.PlayerEnter_Notify)
  return target;
}

size_t PlayerEnter_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.PlayerEnter_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protocol.mmo.ObjectInfo info = 1;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlayerEnter_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlayerEnter_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlayerEnter_Notify::GetClassData() const { return &_class_data_; }


void PlayerEnter_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlayerEnter_Notify*>(&to_msg);
  auto& from = static_cast<const PlayerEnter_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.PlayerEnter_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::protocol::mmo::ObjectInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerEnter_Notify::CopyFrom(const PlayerEnter_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.PlayerEnter_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerEnter_Notify::IsInitialized() const {
  return true;
}

void PlayerEnter_Notify::InternalSwap(PlayerEnter_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayerEnter_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[1]);
}

// ===================================================================

class PlayerExit_Notify::_Internal {
 public:
};

PlayerExit_Notify::PlayerExit_Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.mmo.PlayerExit_Notify)
}
PlayerExit_Notify::PlayerExit_Notify(const PlayerExit_Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PlayerExit_Notify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.mmo.PlayerExit_Notify)
}

inline void PlayerExit_Notify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PlayerExit_Notify::~PlayerExit_Notify() {
  // @@protoc_insertion_point(destructor:protocol.mmo.PlayerExit_Notify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PlayerExit_Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PlayerExit_Notify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlayerExit_Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.mmo.PlayerExit_Notify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayerExit_Notify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PlayerExit_Notify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.mmo.PlayerExit_Notify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.mmo.PlayerExit_Notify)
  return target;
}

size_t PlayerExit_Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.mmo.PlayerExit_Notify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlayerExit_Notify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlayerExit_Notify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlayerExit_Notify::GetClassData() const { return &_class_data_; }


void PlayerExit_Notify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlayerExit_Notify*>(&to_msg);
  auto& from = static_cast<const PlayerExit_Notify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.mmo.PlayerExit_Notify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerExit_Notify::CopyFrom(const PlayerExit_Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.mmo.PlayerExit_Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerExit_Notify::IsInitialized() const {
  return true;
}

void PlayerExit_Notify::InternalSwap(PlayerExit_Notify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayerExit_Notify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MMO_5fprotocol_2eproto_getter, &descriptor_table_MMO_5fprotocol_2eproto_once,
      file_level_metadata_MMO_5fprotocol_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mmo
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::mmo::EnterGame_Resp*
Arena::CreateMaybeMessage< ::protocol::mmo::EnterGame_Resp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::EnterGame_Resp >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::PlayerEnter_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::PlayerEnter_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::PlayerEnter_Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::protocol::mmo::PlayerExit_Notify*
Arena::CreateMaybeMessage< ::protocol::mmo::PlayerExit_Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::mmo::PlayerExit_Notify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
